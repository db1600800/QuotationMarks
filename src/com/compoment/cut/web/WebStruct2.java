package com.compoment.cut.web;

import java.util.List;

import com.compoment.cut.CompomentBean;

public class WebStruct2 {
	
	String pageName;
	String className;
	
	public WebStruct2(String pageName, List<CompomentBean> oldBeans) {
		pageName = pageName;
		className = firstCharToUpperAndJavaName(pageName);
		
		String m="";
		m+="package com.chinapost.jiyouwx.action;\n";

		m+="import java.util.HashMap;\n";
		m+="import java.util.Iterator;\n";
		m+="import java.util.LinkedHashMap;\n";
		m+="import java.util.List;\n";
		m+="import java.util.Map;\n";
		m+="import java.util.Set;\n";

		m+="import javax.annotation.Resource;\n";
		m+="import javax.servlet.http.HttpServletRequest;\n";
		m+="import javax.servlet.http.HttpSession;\n";

		m+="import org.apache.commons.lang.StringUtils;\n";
		m+="import org.apache.struts2.convention.annotation.Action;\n";
		m+="import org.apache.struts2.convention.annotation.Namespace;\n";
		m+="import org.apache.struts2.convention.annotation.ParentPackage;\n";
		m+="import org.apache.struts2.convention.annotation.Result;\n";
		m+="import org.slf4j.Logger;\n";
		m+="import org.slf4j.LoggerFactory;\n";

		m+="import com.chinapost.jiyouwx.common.JiYouSessionKey;\n";
		m+="import com.chinapost.jiyouwx.model.AddressInfoVo;\n";
		m+="import com.chinapost.jiyouwx.model.rtn.RcvBodyJY0037sub;\n";
		m+="import com.chinapost.jiyouwx.msg.CstmMsg;\n";
		m+="import com.chinapost.jiyouwx.msg.ErrorMsg;\n";
		m+="import com.chinapost.jiyouwx.msg.MsgReturn;\n";
		m+="import com.chinapost.jiyouwx.msg.OrderMsg;\n";
		m+="import com.chinapost.jiyouwx.service.AddressActionImpl;\n";
		m+="import com.chinapost.jiyouwx.util.DealErrMsg;\n";
		m+="import com.chinapost.service.Server;\n";
		m+="import com.chinapost.weixin.util.Const;\n";
		m+="import com.forgon.tools.StrutsParamUtils;\n";
		m+="import com.gdpost.tuxedo.PackUtil;\n";
		m+="import com.google.gson.Gson;\n";
		m+="import com.opensymphony.xwork2.ActionSupport;\n";

		m+="@SuppressWarnings(\"unchecked\")\n";
		m+="@ParentPackage(value = \"default\")\n";
		m+="@Namespace(value = \"/jiyou/wx\")\n";
		m+="@Action(value = \"AddressAction\" ,results = { \n";
		m+="		@Result(name = \"index\", location = \"/chinapost/jiyouwx/address/addressManage.jsp\"),\n";
		m+="		@Result(name = \"member_index\", location = \"/chinapost/jiyouwx/member/member_index.jsp\"),\n";
		m+="		@Result(name = \"add\", location = \"/chinapost/jiyouwx/address/addressAdd.jsp\")\n";
		m+="})\n";

		m+="public class "+className+"Action {\n";
		m+="	private static final Logger log = LoggerFactory.getLogger("+className+"Action.class);\n";

		m+="	@Resource\n";
		m+="	private Server server;\n";
		m+="	public void setServer(Server server) {\n";
		m+="		this.server = server;\n";
		m+="	}\n";
		m+="	\n";
		m+="	public String init(){\n";
		m+="		StrutsParamUtils.getRequest().setAttribute(\"shoppingCar\", StrutsParamUtils.getPraramValue(\"shoppingCar\", \"\"));\n";
		m+="		return \"index\";\n";
		m+="	}\n";
		m+="		\n";
		m+="	//地址管理首页\n";
		m+="	  public String queryAddressList() throws Exception{ \n";
		m+="		  HttpServletRequest request = StrutsParamUtils.getRequest();\n";
		m+="		  HttpSession session = request.getSession();\n";
		m+="	      CstmMsg cstmMsg = session.getAttribute(JiYouSessionKey.CSTMMSG.toString()) == null ? new CstmMsg()\n";
		m+="			: (CstmMsg) session.getAttribute(JiYouSessionKey.CSTMMSG.toString()); \n";
		m+="	      Map sendData = new HashMap();			\n";
		m+="	      Map tranBody = new HashMap();\n";
		m+="			\n";
		m+="		 String tranNo = \"JY0011\";\n";
		m+="		 tranBody.put(\"cstmNo\", cstmMsg.getCstmNo() );\n";
		m+="		 tranBody.put(\"isDefaultAddress\", \"0\" );\n";
		m+="		 tranBody.put(\"pageCode\", \"1\" );\n";
		m+="		 tranBody.put(\"pageNum\", \"10\" );\n";
		m+="		 sendData.put(\"tranhead\", PackUtil.setPacketHead(tranNo));\n";
		m+="		 sendData.put(\"tranBody\", tranBody);\n";
		m+="		\n";
		m+="		 //组装接口需要的报文Map		\n";
		m+="		 Map allParam = PackUtil.setBizReqMap(sendData);\n";
		m+="		 String rtn = server.invokeNew(allParam);\n";
		m+="		 //将Json串转成交易报文Map\n";
		m+="		 MsgReturn msgReturn = PackUtil.setBizRespMapNew(rtn);\n";
		m+="		 \n";
		m+="		 String msg = \"success\";\n";
		m+=" 		 Map result = new HashMap();\n";
		m+="		 if(msgReturn != null && msgReturn.getmErrorMsg().getErrorCode().equals(\"0000\")){\n";
		m+="			 Map rltMap = msgReturn.getMap();\n";
		m+="			 AddressActionImpl impl = new AddressActionImpl();\n";
		m+="			 AddressInfoVo info = impl.queryAddress(rltMap);\n";
		m+="			 \n";
		m+="			 result.put(\"result\", msg);\n";
		m+="			 result.put(\"rltdata\", info);\n";
		m+="			 \n";
		m+="		 }\n";
		m+="		if(msgReturn != null && !msgReturn.getmErrorMsg().getErrorCode().equals(\"0000\")){\n";
		m+="			 ErrorMsg error = msgReturn.getmErrorMsg();\n";
		m+="			 error = DealErrMsg.getErrorMsg(error, \"\", null);\n";
		m+="			 \n";
		m+="			 msg = error.getErrorDesc().toString();\n";
		m+="			 result.put(\"result\", msg);\n";
		m+="		 }\n";
		m+="		 \n";
		m+="		 log.info(new Gson().toJson(result));\n";
		m+="		 StrutsParamUtils.getResponse().setCharacterEncoding(\"UTF-8\");\n";
		m+="		 StrutsParamUtils.getResponse().getWriter().write(new Gson().toJson(result));\n";
		m+="		 return ActionSupport.NONE;\n";
		m+="	  } \n";
		m+="	  \n";
		m+="	 //删除地址\n";
		m+="	  public String deleteAddress() throws Exception{ \n";
		m+="		  HttpServletRequest request = StrutsParamUtils.getRequest();\n";
		m+="		  HttpSession session = request.getSession();\n";
		m+="	      CstmMsg cstmMsg = session.getAttribute(JiYouSessionKey.CSTMMSG.toString()) == null ? new CstmMsg()\n";
		m+="			: (CstmMsg) session.getAttribute(JiYouSessionKey.CSTMMSG.toString()); \n";
		m+="	      String id = request.getParameter(\"id\");\n";
		m+="	      \n";
		m+="	      Map sendData = new HashMap();			\n";
		m+="	      Map tranBody = new HashMap();\n";
		m+="			\n";
		m+="		 String tranNo = \"JY0013\";\n";
		m+="		 tranBody.put(\"cstmNo\", cstmMsg.getCstmNo() );\n";
		m+="		 tranBody.put(\"addressID\", id );\n";
		m+="		 sendData.put(\"tranhead\", PackUtil.setPacketHead(tranNo));\n";
		m+="		 sendData.put(\"tranBody\", tranBody);\n";
		m+="		\n";
		m+="		 //组装接口需要的报文Map		\n";
		m+="		 Map allParam = PackUtil.setBizReqMap(sendData);\n";
		m+="		 String rtn = server.invokeNew(allParam);\n";
		m+="		 //将Json串转成交易报文Map\n";
		m+="		 MsgReturn msgReturn = PackUtil.setBizRespMapNew(rtn);\n";
		m+="		 \n";
		m+="		 if(msgReturn != null && !msgReturn.getmErrorMsg().getErrorCode().equals(\"0000\")){	\n";
		m+="			 ErrorMsg error = msgReturn.getmErrorMsg();\n";
		m+="			 DealErrMsg.getErrorMsg(error, \"\", null);\n";
		m+="		 }\n";
		m+="		 request.setAttribute(\"shoppingCar\", StrutsParamUtils.getPraramValue(\"shoppingCar\", \"\"));\n";
		m+="		 return \"index\";\n";
		m+="	  }\n";
		m+="	  \n";
		m+="	  //新增地址\n";
		m+="	  public String addAddress() throws Exception{ \n";
		m+="		 HttpServletRequest request = StrutsParamUtils.getRequest(); \n";
		m+="		 Map province = Const.getParamMap(\"AREACD\",1,\"2\", 2, 3);\n";
		m+="		 Map city = Const.getParamMap(\"AREACD\",1,\"3\", 2, 3);\n";
		m+="		 Map count = Const.getParamMap(\"AREACD\",1,\"4\", 2, 3);\n";
		m+="		 \n";
		m+="		 request.setAttribute(\"province\", province);\n";
		m+="		 request.setAttribute(\"city\", city);\n";
		m+="		 request.setAttribute(\"count\", count);\n";
		m+="		 request.setAttribute(\"shoppingCar\", StrutsParamUtils.getPraramValue(\"shoppingCar\", \"\"));\n";
		m+="		 return \"add\";\n";
		m+="	  }\n";
		m+="	  \n";
		m+="	  //保存新增地址\n";
		m+="	  public String saveAddress() throws Exception{ \n";
		m+="		  HttpServletRequest request = StrutsParamUtils.getRequest();\n";
		m+="		  String name = StrutsParamUtils.getPraramValue(\"username\",\"\");\n";
		m+="		  String phone = request.getParameter(\"phone\");\n";
		m+="		  String province = request.getParameter(\"province\");\n";
		m+="		  String city = request.getParameter(\"city\");\n";
		m+="		  String town = request.getParameter(\"count\");\n";
		m+="		  String address = request.getParameter(\"address\");\n";
		m+="		  String postcode = request.getParameter(\"postcode\");\n";
		m+="		  String defaultAddr = request.getParameter(\"checked\");\n";
		m+="		  HttpSession session = request.getSession();\n";
		m+="		  request.setAttribute(\"shoppingCar\", StrutsParamUtils.getPraramValue(\"shoppingCar\", \"\"));\n";
		m+="	      CstmMsg cstmMsg = session.getAttribute(JiYouSessionKey.CSTMMSG.toString()) == null ? new CstmMsg()\n";
		m+="			: (CstmMsg) session.getAttribute(JiYouSessionKey.CSTMMSG.toString()); \n";
		m+="	      \n";
		m+="	      //判断是否是直辖市MUNICIPALITY_CITY\n";
		m+="	      Map muniCity = Const.getParamMap(\"MUNICIPALITY_CITY\", 1, 2);\n";
		m+="	      if(muniCity.containsKey(province)){\n";
		m+="	    	  town = city;\n";
		m+="	    	  city = province;\n";
		m+="	    	  province = city.substring(0, 2) + \"0000\";\n";
		m+="	      }\n";
		m+="	      \n";
		m+="	      Map sendData = new HashMap();			\n";
		m+="	      Map tranBody = new HashMap();\n";
		m+="			\n";
		m+="		 String tranNo = \"JY0012\";\n";
		m+="		 tranBody.put(\"cstmNo\", cstmMsg.getCstmNo() );\n";
		m+="		 tranBody.put(\"recvName\", name );\n";
		m+="		 tranBody.put(\"provCode\", province == \"-1\"?\"\":province );\n";
		m+="		 tranBody.put(\"cityCode\", city == \"-1\"?\"\":city);\n";
		m+="		 tranBody.put(\"countCode\", town == \"-1\"?\"\":town);\n";
		m+="		 tranBody.put(\"detailAddress\", address );\n";
		m+="		 tranBody.put(\"mobileNo\", phone );\n";
		m+="		 tranBody.put(\"postCode\", postcode );\n";
		m+="		 tranBody.put(\"isDefaultAddress\", defaultAddr );\n";
		m+="		 sendData.put(\"tranhead\", PackUtil.setPacketHead(tranNo));\n";
		m+="		 sendData.put(\"tranBody\", tranBody);\n";
		m+="		log.debug(\"saveAddress() tranBody=\" + tranBody);\n";
		m+="		 //组装接口需要的报文Map		\n";
		m+="		 Map allParam = PackUtil.setBizReqMap(sendData);\n";
		m+="		 String rtn = server.invokeNew(allParam);\n";
		m+="		 //将Json串转成交易报文Map\n";
		m+="		 MsgReturn msgReturn = PackUtil.setBizRespMapNew(rtn);\n";
		m+="		 if(msgReturn != null && msgReturn.getmErrorMsg().getErrorCode().equals(\"0000\")){\n";
		m+="			 //添加地址之后重新查询地址\n";
		m+="			 Map sendData1 = new HashMap();			\n";
		m+="		     Map tranBody1 = new HashMap();\n";
		m+="				\n";
		m+="			 tranNo = \"JY0011\";\n";
		m+="			 tranBody1.put(\"cstmNo\", cstmMsg.getCstmNo() );\n";
		m+="			 tranBody1.put(\"isDefaultAddress\", \"0\" );\n";
		m+="			 tranBody1.put(\"pageCode\", \"1\" );\n";
		m+="			 tranBody1.put(\"pageNum\", \"10\" );\n";
		m+="			 sendData1.put(\"tranhead\", PackUtil.setPacketHead(tranNo));\n";
		m+="			 sendData1.put(\"tranBody\", tranBody1);\n";
		m+="			\n";
		m+="			 //组装接口需要的报文Map		\n";
		m+="			 allParam = PackUtil.setBizReqMap(sendData1);\n";
		m+="			 rtn = server.invokeNew(allParam);\n";
		m+="			 //将Json串转成交易报文Map\n";
		m+="			 MsgReturn msg = PackUtil.setBizRespMapNew(rtn);\n";
		m+="			 if(msg != null && msg.getmErrorMsg().getErrorCode().equals(\"0000\")){\n";
		m+="				 Map rltMap = msg.getMap();\n";
		m+="				 AddressActionImpl impl = new AddressActionImpl();\n";
		m+="				 AddressInfoVo info = impl.queryAddress(rltMap);\n";
		m+="				 request.setAttribute(\"address_info\", info);\n";
		m+="				 return \"index\";\n";
		m+="			 }\n";
		m+="		 }\n";
		m+="		 ErrorMsg error = msgReturn.getmErrorMsg();\n";
		m+="		 DealErrMsg.getErrorMsg(error, \"\", null);\n";
		m+="		 \n";
		m+="		 return \"add\";\n";
		m+="	  }\n";
		m+="	  \n";
		m+="	  //根据省代号查询市\n";
		m+="	  public String queryCity() { \n";
		m+="		  HttpServletRequest request = StrutsParamUtils.getRequest();\n";
		m+="		  Map city = Const.getParamMap(\"AREACD\",1,\"3\", 2, 3);\n";
		m+="		  HttpSession session = request.getSession();\n";
		m+="		  OrderMsg orderMsg = session.getAttribute(JiYouSessionKey.USER_ORDER_MSG.toString()) == null ? new OrderMsg()\n";
		m+="		  	  : (OrderMsg) session.getAttribute(JiYouSessionKey.USER_ORDER_MSG.toString()); \n";
		m+="		  String prepNumber = StrutsParamUtils.getPraramValue(\"prepNumber\", \"\")  ;//预处理带过来的预处理单编号\n";
		m+="		  \n";
		m+="		  log.debug(\"queryCity() prepNumber=\" + prepNumber);\n";
		m+="		  //2015/8/30新增：\n";
		m+="		  if(orderMsg.getOrderProcessingMsg() != null && orderMsg.getOrderProcessingMsg().getPreOrderNumList().size() > 0 ){\n";
		m+="			  List<RcvBodyJY0037sub> preOrderNumList = orderMsg.getOrderProcessingMsg().getPreOrderNumList();\n";
		m+="			  for (RcvBodyJY0037sub jy0037sub : preOrderNumList) {\n";
		m+="				//2015-8-30如果jy0037sub.getSinceCityComp()不为空就只下发此市\n";
		m+="				if(StringUtils.equals(prepNumber, jy0037sub.getPrepNumber())){\n";
		m+="					String sinceCityComp = jy0037sub.getSinceCityComp();\n";
		m+="					log.debug(\"queryCity() sinceCityComp=\" + sinceCityComp);\n";
		m+="					if(StringUtils.isNotBlank(sinceCityComp)){\n";
		m+="						String[] citys = StringUtils.split(sinceCityComp, \",\");\n";
		m+="						Map rltCityMap  = new LinkedHashMap();\n";
		m+="						for (String string : citys) {\n";
		m+="							if(city.containsKey(string)){\n";
		m+="								rltCityMap.put(string, city.get(string));\n";
		m+="							}\n";
		m+="						}\n";
		m+="						log.debug(\"queryCity() rltCityMap=\" + rltCityMap);\n";
		m+="						if(!rltCityMap.isEmpty()){\n";
		m+="							StrutsParamUtils.writeStr(new Gson().toJson(rltCityMap));\n";
		m+="							return ActionSupport.NONE;\n";
		m+="						}\n";
		m+="					} \n";
		m+="				}\n";
		m+="			  }\n";
		m+="		  }\n";
		m+="		\n";
		m+="		  String province = request.getParameter(\"province\");\n";
		m+="		  Map rltMap = new HashMap();\n";
		m+="		\n";
		m+="		  //省与市前2位相同\n";
		m+="		  String subProv = province.substring(0,2);\n";
		m+="		  \n";
		m+="		  Set keySet = city.entrySet();\n";
		m+="		  Iterator i = keySet.iterator();\n";
		m+="		  while(i.hasNext()) {\n";
		m+="			  Map.Entry map = (Map.Entry)i.next();\n";
		m+="			  if(map.getKey().toString().substring(0,2).equals(subProv)){\n";
		m+="				  rltMap.put(map.getKey(), map.getValue());\n";
		m+="			  }\n";
		m+="		  }\n";
		m+="		  \n";
		m+="		  StrutsParamUtils.writeStr(new Gson().toJson(rltMap));\n";
		m+="		  return ActionSupport.NONE;\n";
		m+="	  }\n";
		m+="	  \n";
		m+="	//根据市代号查询县\n";
		m+="	  public String queryCount() throws Exception{ \n";
		m+="		  HttpServletRequest request = StrutsParamUtils.getRequest();\n";
		m+="		  String city = request.getParameter(\"city\");\n";
		m+="		  Map count = Const.getParamMap(\"AREACD\",1,\"4\", 2, 3);\n";
		m+="		  Map rltMap = new HashMap();\n";
		m+="		 \n";
		m+="		  //市与县前4位相同\n";
		m+="		  String subCity = city.substring(0,4);\n";
		m+="		  Set keySet = count.entrySet();\n";
		m+="		  Iterator i = keySet.iterator();\n";
		m+="		  while(i.hasNext()) {\n";
		m+="			  Map.Entry map = (Map.Entry)i.next();\n";
		m+="			  if(map.getKey().toString().substring(0,4).equals(subCity)){\n";
		m+="				  rltMap.put(map.getKey(), map.getValue());\n";
		m+="			  }\n";
		m+="		  }\n";
		m+="		  \n";
		m+="		  StrutsParamUtils.getResponse().setCharacterEncoding(\"UTF-8\");\n";
		m+="		  StrutsParamUtils.getResponse().getWriter().write(new Gson().toJson(rltMap));\n";
		m+="		  return ActionSupport.NONE;\n";
		m+="	  }\n";
		m+="			\n";
		m+="}\n";

	}

	
	
	public static String firstCharToUpperAndJavaName(String string) {
		// buy_typelist
		String[] ss = string.split("_");
		String temp = "";
		for (String s : ss) {
			if (!s.equals("item"))
				temp += s.substring(0, 1).toUpperCase() + s.substring(1);
		}
		return temp;
	}
}
