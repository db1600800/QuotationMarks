
import java.util.ArrayList;
import java.util.List;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.util.Log;
//http://www.2cto.com/kf/201207/144022.html
public class Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBContentResolver {
	private ContentResolver resolver;
	public static final String FALSE = "0";
	public static final String TRUE = "1";
	public Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBContentResolver(Context context) {
		this.resolver = context.getContentResolver();
	}
/**插入数据(帐户信息_表)*/
	public void insert(AccountBean accountBean) {
		ContentValues values = new ContentValues();
//帐户ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID, accountBean.getAccountId());
//帐户余额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE, accountBean.getAccountBalance());
//积分余额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE, accountBean.getIntegralBalance());
//帐户名字
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME, accountBean.getUserName());
//帐户密码
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD, accountBean.getPassWord());
		resolver.insert(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI, values);
	}
/**插入数据(送货_表)*/
	public void insert(DeliverBean deliverBean) {
		ContentValues values = new ContentValues();
//送货ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID, deliverBean.getDeliverId());
//送货方式（自己提货，快递送货）
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY, deliverBean.getDeliverWay());
//地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS, deliverBean.getDeliverAddress());
//收件人
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER, deliverBean.getReceiver());
//收件人移动电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE, deliverBean.getReceiverMobilePhone());
//收件人固定电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE, deliverBean.getReceiverPhone());
		resolver.insert(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI, values);
	}
/**插入数据(订单_表)*/
	public void insert(OrderFormBean orderFormBean) {
		ContentValues values = new ContentValues();
//订单号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID, orderFormBean.getOrderId());
//购货日期
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE, orderFormBean.getOrderDate());
//订货人ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D, orderFormBean.getOrderManID());
//订货人姓名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME, orderFormBean.getOrderManName());
//订货人电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE, orderFormBean.getOrderManPhone());
//送货方式
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY, orderFormBean.getDeliverWay());
//送货（提货）地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS, orderFormBean.getDeliverAddress());
//提货人姓名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME, orderFormBean.getPickupManName());
//提货人电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE, orderFormBean.getPickupManPhone());
//提货地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS, orderFormBean.getPickupAddress());
//提货人证件号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO, orderFormBean.getPickupManCertificateNo());
//产品ID(多个产品用逗号分割',')
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID, orderFormBean.getProductId());
//产品名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME, orderFormBean.getProductName());
//产品价格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE, orderFormBean.getProductPrice());
//产品数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM, orderFormBean.getProductNum());
//产品点数
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE, orderFormBean.getProductIntegrate());
//产品总金额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE, orderFormBean.getProductTotalPrice());
//运费
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE, orderFormBean.getDeliverPrice());
//礼品ID(多个产品用逗号分割',')
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID, orderFormBean.getGiftId());
//礼品名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME, orderFormBean.getGiftName());
//礼品数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM, orderFormBean.getGiftNum());
//订单状态(已付款，未付款,已经发货,付款失败)
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE, orderFormBean.getOrderState());
		resolver.insert(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI, values);
	}
/**插入数据(产品	购物车	收藏_表)*/
	public void insert(ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean) {
		ContentValues values = new ContentValues();
//产品ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID, productShoppingcarStoreUpBean.getProductId());
//产品所属系列
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS, productShoppingcarStoreUpBean.getProductClass());
//产品名字
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME, productShoppingcarStoreUpBean.getProductName());
//产品图片
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC, productShoppingcarStoreUpBean.getProductPic());
//产品缩略图
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC, productShoppingcarStoreUpBean.getProductSmalPic());
//产品简介
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO, productShoppingcarStoreUpBean.getProductInfo());
//产品规格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE, productShoppingcarStoreUpBean.getProductStype());
//产品原价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE, productShoppingcarStoreUpBean.getProductPrice());
//产品折扣率
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT, productShoppingcarStoreUpBean.getProductDiscount());
//产品优惠价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE, productShoppingcarStoreUpBean.getProductPreferentialPrice());
//个人购货价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE, productShoppingcarStoreUpBean.getPersonBuyPrice());
//在线推荐价格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE, productShoppingcarStoreUpBean.getOnlineRecommendPrice());
//产品点数
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE, productShoppingcarStoreUpBean.getProductIntegrate());
//是否加入购物车
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR, productShoppingcarStoreUpBean.getisInShoppingCar());
//是否收藏
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP, productShoppingcarStoreUpBean.getisStoreUp());
//购买单位
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT, productShoppingcarStoreUpBean.getBuyUnit());
//允许的最大购买量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER, productShoppingcarStoreUpBean.getMaxBuyNumber());
//购买数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER, productShoppingcarStoreUpBean.getBuyNumber());
//库存数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER, productShoppingcarStoreUpBean.getInventoryNumber());
//是否促销
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION, productShoppingcarStoreUpBean.getisPromotion());
//促销活动编号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID, productShoppingcarStoreUpBean.getPromotionId());
//产品状态(0下架1上架)
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS, productShoppingcarStoreUpBean.getStatus());
//是否为礼品
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT, productShoppingcarStoreUpBean.getisGift());
		resolver.insert(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI, values);
	}
/**更新数据(帐户信息_表)*/
	public int update(AccountBean accountBean) {
		ContentValues values = new ContentValues();
//帐户ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID, accountBean.getAccountId());
//帐户余额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE, accountBean.getAccountBalance());
//积分余额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE, accountBean.getIntegralBalance());
//帐户名字
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME, accountBean.getUserName());
//帐户密码
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD, accountBean.getPassWord());
		int count = resolver.update(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI, values,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID + "=?",
				new String[] { accountBean.getAccountId() });
		return count;
	}
/**更新数据(送货_表)*/
	public int update(DeliverBean deliverBean) {
		ContentValues values = new ContentValues();
//送货ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID, deliverBean.getDeliverId());
//送货方式（自己提货，快递送货）
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY, deliverBean.getDeliverWay());
//地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS, deliverBean.getDeliverAddress());
//收件人
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER, deliverBean.getReceiver());
//收件人移动电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE, deliverBean.getReceiverMobilePhone());
//收件人固定电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE, deliverBean.getReceiverPhone());
		int count = resolver.update(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI, values,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID + "=?",
				new String[] { deliverBean.getDeliverId() });
		return count;
	}
/**更新数据(订单_表)*/
	public int update(OrderFormBean orderFormBean) {
		ContentValues values = new ContentValues();
//订单号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID, orderFormBean.getOrderId());
//购货日期
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE, orderFormBean.getOrderDate());
//订货人ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D, orderFormBean.getOrderManID());
//订货人姓名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME, orderFormBean.getOrderManName());
//订货人电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE, orderFormBean.getOrderManPhone());
//送货方式
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY, orderFormBean.getDeliverWay());
//送货（提货）地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS, orderFormBean.getDeliverAddress());
//提货人姓名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME, orderFormBean.getPickupManName());
//提货人电话
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE, orderFormBean.getPickupManPhone());
//提货地址
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS, orderFormBean.getPickupAddress());
//提货人证件号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO, orderFormBean.getPickupManCertificateNo());
//产品ID(多个产品用逗号分割',')
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID, orderFormBean.getProductId());
//产品名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME, orderFormBean.getProductName());
//产品价格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE, orderFormBean.getProductPrice());
//产品数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM, orderFormBean.getProductNum());
//产品点数
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE, orderFormBean.getProductIntegrate());
//产品总金额
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE, orderFormBean.getProductTotalPrice());
//运费
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE, orderFormBean.getDeliverPrice());
//礼品ID(多个产品用逗号分割',')
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID, orderFormBean.getGiftId());
//礼品名
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME, orderFormBean.getGiftName());
//礼品数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM, orderFormBean.getGiftNum());
//订单状态(已付款，未付款,已经发货,付款失败)
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE, orderFormBean.getOrderState());
		int count = resolver.update(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI, values,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID + "=?",
				new String[] { orderFormBean.getOrderId() });
		return count;
	}
/**更新数据(产品	购物车	收藏_表)*/
	public int update(ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean) {
		ContentValues values = new ContentValues();
//产品ID
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID, productShoppingcarStoreUpBean.getProductId());
//产品所属系列
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS, productShoppingcarStoreUpBean.getProductClass());
//产品名字
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME, productShoppingcarStoreUpBean.getProductName());
//产品图片
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC, productShoppingcarStoreUpBean.getProductPic());
//产品缩略图
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC, productShoppingcarStoreUpBean.getProductSmalPic());
//产品简介
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO, productShoppingcarStoreUpBean.getProductInfo());
//产品规格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE, productShoppingcarStoreUpBean.getProductStype());
//产品原价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE, productShoppingcarStoreUpBean.getProductPrice());
//产品折扣率
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT, productShoppingcarStoreUpBean.getProductDiscount());
//产品优惠价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE, productShoppingcarStoreUpBean.getProductPreferentialPrice());
//个人购货价
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE, productShoppingcarStoreUpBean.getPersonBuyPrice());
//在线推荐价格
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE, productShoppingcarStoreUpBean.getOnlineRecommendPrice());
//产品点数
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE, productShoppingcarStoreUpBean.getProductIntegrate());
//是否加入购物车
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR, productShoppingcarStoreUpBean.getisInShoppingCar());
//是否收藏
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP, productShoppingcarStoreUpBean.getisStoreUp());
//购买单位
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT, productShoppingcarStoreUpBean.getBuyUnit());
//允许的最大购买量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER, productShoppingcarStoreUpBean.getMaxBuyNumber());
//购买数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER, productShoppingcarStoreUpBean.getBuyNumber());
//库存数量
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER, productShoppingcarStoreUpBean.getInventoryNumber());
//是否促销
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION, productShoppingcarStoreUpBean.getisPromotion());
//促销活动编号
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID, productShoppingcarStoreUpBean.getPromotionId());
//产品状态(0下架1上架)
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS, productShoppingcarStoreUpBean.getStatus());
//是否为礼品
		values.put(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT, productShoppingcarStoreUpBean.getisGift());
		int count = resolver.update(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI, values,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID + "=?",
				new String[] { productShoppingcarStoreUpBean.getProductId() });
		return count;
	}
/**删除某条数据(帐户信息_表)*/
	public int deleteAccount(String accountId) {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID + "=?", new String[] { accountId });
		return count;
	}
/**删除某条数据(送货_表)*/
	public int deleteDeliver(String deliverId) {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID + "=?", new String[] { deliverId });
		return count;
	}
/**删除某条数据(订单_表)*/
	public int deleteOrderForm(String orderId) {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID + "=?", new String[] { orderId });
		return count;
	}
/**删除某条数据(产品	购物车	收藏_表)*/
	public int deleteProductShoppingcarStoreUp(String productId) {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
				Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID + "=?", new String[] { productId });
		return count;
	}
/**删除整表数据(帐户信息_表)*/
	public int clearAccount() {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI, null,
				null);
		return count;
	}
/**删除整表数据(送货_表)*/
	public int clearDeliver() {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI, null,
				null);
		return count;
	}
/**删除整表数据(订单_表)*/
	public int clearOrderForm() {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI, null,
				null);
		return count;
	}
/**删除整表数据(产品	购物车	收藏_表)*/
	public int clearProductShoppingcarStoreUp() {
		int count = resolver.delete(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI, null,
				null);
		return count;
	}
/**查询表数据根据AccountId帐户ID(帐户信息_表)*/
	public List<AccountBean queryAccountByAccountId(String i_AccountId) {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID+ "=?",
						new String[] { i_AccountId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accountBean;
	}
/**查询表数据根据AccountBalance帐户余额(帐户信息_表)*/
	public List<AccountBean queryAccountByAccountBalance(String i_AccountBalance) {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE+ "=?",
						new String[] { i_AccountBalance}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accountBean;
	}
/**查询表数据根据IntegralBalance积分余额(帐户信息_表)*/
	public List<AccountBean queryAccountByIntegralBalance(String i_IntegralBalance) {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE+ "=?",
						new String[] { i_IntegralBalance}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accountBean;
	}
/**查询表数据根据UserName帐户名字(帐户信息_表)*/
	public List<AccountBean queryAccountByUserName(String i_UserName) {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME+ "=?",
						new String[] { i_UserName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accountBean;
	}
/**查询表数据根据PassWord帐户密码(帐户信息_表)*/
	public List<AccountBean queryAccountByPassWord(String i_PassWord) {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD+ "=?",
						new String[] { i_PassWord}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accountBean;
	}
/**查询表数据根据DeliverId送货ID(送货_表)*/
	public List<DeliverBean queryDeliverByDeliverId(String i_DeliverId) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID+ "=?",
						new String[] { i_DeliverId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据DeliverWay送货方式（自己提货，快递送货）(送货_表)*/
	public List<DeliverBean queryDeliverByDeliverWay(String i_DeliverWay) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY+ "=?",
						new String[] { i_DeliverWay}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据DeliverAddress地址(送货_表)*/
	public List<DeliverBean queryDeliverByDeliverAddress(String i_DeliverAddress) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS+ "=?",
						new String[] { i_DeliverAddress}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据Receiver收件人(送货_表)*/
	public List<DeliverBean queryDeliverByReceiver(String i_Receiver) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER+ "=?",
						new String[] { i_Receiver}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据ReceiverMobilePhone收件人移动电话(送货_表)*/
	public List<DeliverBean queryDeliverByReceiverMobilePhone(String i_ReceiverMobilePhone) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE+ "=?",
						new String[] { i_ReceiverMobilePhone}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据ReceiverPhone收件人固定电话(送货_表)*/
	public List<DeliverBean queryDeliverByReceiverPhone(String i_ReceiverPhone) {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE+ "=?",
						new String[] { i_ReceiverPhone}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return deliverBean;
	}
/**查询表数据根据OrderId订单号(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderId(String i_OrderId) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID+ "=?",
						new String[] { i_OrderId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据OrderDate购货日期(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderDate(String i_OrderDate) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE+ "=?",
						new String[] { i_OrderDate}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据OrderManID订货人ID(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderManID(String i_OrderManID) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D+ "=?",
						new String[] { i_OrderManID}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据OrderManName订货人姓名(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderManName(String i_OrderManName) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME+ "=?",
						new String[] { i_OrderManName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据OrderManPhone订货人电话(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderManPhone(String i_OrderManPhone) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE+ "=?",
						new String[] { i_OrderManPhone}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据DeliverWay送货方式(订单_表)*/
	public List<OrderFormBean queryOrderFormByDeliverWay(String i_DeliverWay) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY+ "=?",
						new String[] { i_DeliverWay}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据DeliverAddress送货（提货）地址(订单_表)*/
	public List<OrderFormBean queryOrderFormByDeliverAddress(String i_DeliverAddress) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS+ "=?",
						new String[] { i_DeliverAddress}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据PickupManName提货人姓名(订单_表)*/
	public List<OrderFormBean queryOrderFormByPickupManName(String i_PickupManName) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME+ "=?",
						new String[] { i_PickupManName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据PickupManPhone提货人电话(订单_表)*/
	public List<OrderFormBean queryOrderFormByPickupManPhone(String i_PickupManPhone) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE+ "=?",
						new String[] { i_PickupManPhone}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据PickupAddress提货地址(订单_表)*/
	public List<OrderFormBean queryOrderFormByPickupAddress(String i_PickupAddress) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS+ "=?",
						new String[] { i_PickupAddress}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据PickupManCertificateNo提货人证件号(订单_表)*/
	public List<OrderFormBean queryOrderFormByPickupManCertificateNo(String i_PickupManCertificateNo) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO+ "=?",
						new String[] { i_PickupManCertificateNo}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductId产品ID(多个产品用逗号分割',')(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductId(String i_ProductId) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID+ "=?",
						new String[] { i_ProductId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductName产品名(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductName(String i_ProductName) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME+ "=?",
						new String[] { i_ProductName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductPrice产品价格(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductPrice(String i_ProductPrice) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE+ "=?",
						new String[] { i_ProductPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductNum产品数量(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductNum(String i_ProductNum) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM+ "=?",
						new String[] { i_ProductNum}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductIntegrate产品点数(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductIntegrate(String i_ProductIntegrate) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE+ "=?",
						new String[] { i_ProductIntegrate}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductTotalPrice产品总金额(订单_表)*/
	public List<OrderFormBean queryOrderFormByProductTotalPrice(String i_ProductTotalPrice) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE+ "=?",
						new String[] { i_ProductTotalPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据DeliverPrice运费(订单_表)*/
	public List<OrderFormBean queryOrderFormByDeliverPrice(String i_DeliverPrice) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE+ "=?",
						new String[] { i_DeliverPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据GiftId礼品ID(多个产品用逗号分割',')(订单_表)*/
	public List<OrderFormBean queryOrderFormByGiftId(String i_GiftId) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID+ "=?",
						new String[] { i_GiftId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据GiftName礼品名(订单_表)*/
	public List<OrderFormBean queryOrderFormByGiftName(String i_GiftName) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME+ "=?",
						new String[] { i_GiftName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据GiftNum礼品数量(订单_表)*/
	public List<OrderFormBean queryOrderFormByGiftNum(String i_GiftNum) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM+ "=?",
						new String[] { i_GiftNum}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据OrderState订单状态(已付款，未付款,已经发货,付款失败)(订单_表)*/
	public List<OrderFormBean queryOrderFormByOrderState(String i_OrderState) {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE+ "=?",
						new String[] { i_OrderState}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderFormBean;
	}
/**查询表数据根据ProductId产品ID(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductId(String i_ProductId) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID+ "=?",
						new String[] { i_ProductId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductClass产品所属系列(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductClass(String i_ProductClass) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS+ "=?",
						new String[] { i_ProductClass}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductName产品名字(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductName(String i_ProductName) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME+ "=?",
						new String[] { i_ProductName}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductPic产品图片(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductPic(String i_ProductPic) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC+ "=?",
						new String[] { i_ProductPic}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductSmalPic产品缩略图(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductSmalPic(String i_ProductSmalPic) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC+ "=?",
						new String[] { i_ProductSmalPic}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductInfo产品简介(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductInfo(String i_ProductInfo) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO+ "=?",
						new String[] { i_ProductInfo}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductStype产品规格(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductStype(String i_ProductStype) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE+ "=?",
						new String[] { i_ProductStype}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductPrice产品原价(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductPrice(String i_ProductPrice) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE+ "=?",
						new String[] { i_ProductPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductDiscount产品折扣率(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductDiscount(String i_ProductDiscount) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT+ "=?",
						new String[] { i_ProductDiscount}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductPreferentialPrice产品优惠价(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductPreferentialPrice(String i_ProductPreferentialPrice) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE+ "=?",
						new String[] { i_ProductPreferentialPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据PersonBuyPrice个人购货价(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByPersonBuyPrice(String i_PersonBuyPrice) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE+ "=?",
						new String[] { i_PersonBuyPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据OnlineRecommendPrice在线推荐价格(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByOnlineRecommendPrice(String i_OnlineRecommendPrice) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE+ "=?",
						new String[] { i_OnlineRecommendPrice}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据ProductIntegrate产品点数(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByProductIntegrate(String i_ProductIntegrate) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE+ "=?",
						new String[] { i_ProductIntegrate}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据isInShoppingCar是否加入购物车(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByisInShoppingCar(String i_isInShoppingCar) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR+ "=?",
						new String[] { i_isInShoppingCar}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据isStoreUp是否收藏(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByisStoreUp(String i_isStoreUp) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP+ "=?",
						new String[] { i_isStoreUp}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据BuyUnit购买单位(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByBuyUnit(String i_BuyUnit) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT+ "=?",
						new String[] { i_BuyUnit}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据MaxBuyNumber允许的最大购买量(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByMaxBuyNumber(String i_MaxBuyNumber) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER+ "=?",
						new String[] { i_MaxBuyNumber}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据BuyNumber购买数量(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByBuyNumber(String i_BuyNumber) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER+ "=?",
						new String[] { i_BuyNumber}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据InventoryNumber库存数量(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByInventoryNumber(String i_InventoryNumber) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER+ "=?",
						new String[] { i_InventoryNumber}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据isPromotion是否促销(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByisPromotion(String i_isPromotion) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION+ "=?",
						new String[] { i_isPromotion}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据PromotionId促销活动编号(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByPromotionId(String i_PromotionId) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID+ "=?",
						new String[] { i_PromotionId}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据Status产品状态(0下架1上架)(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByStatus(String i_Status) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS+ "=?",
						new String[] { i_Status}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询表数据根据isGift是否为礼品(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean queryProductShoppingcarStoreUpByisGift(String i_isGift) {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver
				.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
						new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
								Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT},
						Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT+ "=?",
						new String[] { i_isGift}, null);// String ordersort= MESSAGE_RECORD_ID DESC  ...ASC
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUpBean;
	}
/**查询整表数据(帐户信息_表)*/
	public List<AccountBean> queryAllAccount() {
		List<AccountBean> accounts= new ArrayList<AccountBean>();
		Cursor cursor = resolver.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.CONTENT_URI,
				new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD}, null, null, null);
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfAccountId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_ID);
				int indexOfAccountBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.ACCOUNT_BALANCE);
				int indexOfIntegralBalance = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.INTEGRAL_BALANCE);
				int indexOfUserName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.USER_NAME);
				int indexOfPassWord = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.AccountTable.PASS_WORD);
				do {
//帐户ID
					String accountId = cursor.getString(indexOfAccountId);
//帐户余额
					String accountBalance = cursor.getString(indexOfAccountBalance);
//积分余额
					String integralBalance = cursor.getString(indexOfIntegralBalance);
//帐户名字
					String userName = cursor.getString(indexOfUserName);
//帐户密码
					String passWord = cursor.getString(indexOfPassWord);
					AccountBean accountBean = new AccountBean();
//帐户ID
accountBean.setAccountId(accountId);
//帐户余额
accountBean.setAccountBalance(accountBalance);
//积分余额
accountBean.setIntegralBalance(integralBalance);
//帐户名字
accountBean.setUserName(userName);
//帐户密码
accountBean.setPassWord(passWord);
					accounts.add(accountBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return accounts;
	}
/**查询整表数据(送货_表)*/
	public List<DeliverBean> queryAllDeliver() {
		List<DeliverBean> delivers= new ArrayList<DeliverBean>();
		Cursor cursor = resolver.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.CONTENT_URI,
				new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE}, null, null, null);
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfDeliverId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_ID);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.DELIVERADDRESS);
				int indexOfReceiver = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER);
				int indexOfReceiverMobilePhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_MOBILE_PHONE);
				int indexOfReceiverPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.DeliverTable.RECEIVER_PHONE);
				do {
//送货ID
					String deliverId = cursor.getString(indexOfDeliverId);
//送货方式（自己提货，快递送货）
					String deliverWay = cursor.getString(indexOfDeliverWay);
//地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//收件人
					String receiver = cursor.getString(indexOfReceiver);
//收件人移动电话
					String receiverMobilePhone = cursor.getString(indexOfReceiverMobilePhone);
//收件人固定电话
					String receiverPhone = cursor.getString(indexOfReceiverPhone);
					DeliverBean deliverBean = new DeliverBean();
//送货ID
deliverBean.setDeliverId(deliverId);
//送货方式（自己提货，快递送货）
deliverBean.setDeliverWay(deliverWay);
//地址
deliverBean.setDeliverAddress(deliverAddress);
//收件人
deliverBean.setReceiver(receiver);
//收件人移动电话
deliverBean.setReceiverMobilePhone(receiverMobilePhone);
//收件人固定电话
deliverBean.setReceiverPhone(receiverPhone);
					delivers.add(deliverBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return delivers;
	}
/**查询整表数据(订单_表)*/
	public List<OrderFormBean> queryAllOrderForm() {
		List<OrderFormBean> orderForms= new ArrayList<OrderFormBean>();
		Cursor cursor = resolver.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.CONTENT_URI,
				new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE}, null, null, null);
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfOrderId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_ID);
				int indexOfOrderDate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_DATE);
				int indexOfOrderManID = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_I_D);
				int indexOfOrderManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_NAME);
				int indexOfOrderManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_MAN_PHONE);
				int indexOfDeliverWay = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_WAY);
				int indexOfDeliverAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVERADDRESS);
				int indexOfPickupManName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_NAME);
				int indexOfPickupManPhone = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_PHONE);
				int indexOfPickupAddress = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUPADDRESS);
				int indexOfPickupManCertificateNo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PICKUP_MAN_CERTIFICATE_NO);
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_ID);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NAME);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_PRICE);
				int indexOfProductNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_NUM);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_INTEGRATE);
				int indexOfProductTotalPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.PRODUCT_TOTAL_PRICE);
				int indexOfDeliverPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.DELIVER_PRICE);
				int indexOfGiftId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_ID);
				int indexOfGiftName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NAME);
				int indexOfGiftNum = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.GIFT_NUM);
				int indexOfOrderState = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.OrderFormTable.ORDER_STATE);
				do {
//订单号
					String orderId = cursor.getString(indexOfOrderId);
//购货日期
					String orderDate = cursor.getString(indexOfOrderDate);
//订货人ID
					String orderManID = cursor.getString(indexOfOrderManID);
//订货人姓名
					String orderManName = cursor.getString(indexOfOrderManName);
//订货人电话
					String orderManPhone = cursor.getString(indexOfOrderManPhone);
//送货方式
					String deliverWay = cursor.getString(indexOfDeliverWay);
//送货（提货）地址
					String deliverAddress = cursor.getString(indexOfDeliverAddress);
//提货人姓名
					String pickupManName = cursor.getString(indexOfPickupManName);
//提货人电话
					String pickupManPhone = cursor.getString(indexOfPickupManPhone);
//提货地址
					String pickupAddress = cursor.getString(indexOfPickupAddress);
//提货人证件号
					String pickupManCertificateNo = cursor.getString(indexOfPickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
					String productId = cursor.getString(indexOfProductId);
//产品名
					String productName = cursor.getString(indexOfProductName);
//产品价格
					String productPrice = cursor.getString(indexOfProductPrice);
//产品数量
					String productNum = cursor.getString(indexOfProductNum);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//产品总金额
					String productTotalPrice = cursor.getString(indexOfProductTotalPrice);
//运费
					String deliverPrice = cursor.getString(indexOfDeliverPrice);
//礼品ID(多个产品用逗号分割',')
					String giftId = cursor.getString(indexOfGiftId);
//礼品名
					String giftName = cursor.getString(indexOfGiftName);
//礼品数量
					String giftNum = cursor.getString(indexOfGiftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
					String orderState = cursor.getString(indexOfOrderState);
					OrderFormBean orderFormBean = new OrderFormBean();
//订单号
orderFormBean.setOrderId(orderId);
//购货日期
orderFormBean.setOrderDate(orderDate);
//订货人ID
orderFormBean.setOrderManID(orderManID);
//订货人姓名
orderFormBean.setOrderManName(orderManName);
//订货人电话
orderFormBean.setOrderManPhone(orderManPhone);
//送货方式
orderFormBean.setDeliverWay(deliverWay);
//送货（提货）地址
orderFormBean.setDeliverAddress(deliverAddress);
//提货人姓名
orderFormBean.setPickupManName(pickupManName);
//提货人电话
orderFormBean.setPickupManPhone(pickupManPhone);
//提货地址
orderFormBean.setPickupAddress(pickupAddress);
//提货人证件号
orderFormBean.setPickupManCertificateNo(pickupManCertificateNo);
//产品ID(多个产品用逗号分割',')
orderFormBean.setProductId(productId);
//产品名
orderFormBean.setProductName(productName);
//产品价格
orderFormBean.setProductPrice(productPrice);
//产品数量
orderFormBean.setProductNum(productNum);
//产品点数
orderFormBean.setProductIntegrate(productIntegrate);
//产品总金额
orderFormBean.setProductTotalPrice(productTotalPrice);
//运费
orderFormBean.setDeliverPrice(deliverPrice);
//礼品ID(多个产品用逗号分割',')
orderFormBean.setGiftId(giftId);
//礼品名
orderFormBean.setGiftName(giftName);
//礼品数量
orderFormBean.setGiftNum(giftNum);
//订单状态(已付款，未付款,已经发货,付款失败)
orderFormBean.setOrderState(orderState);
					orderForms.add(orderFormBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return orderForms;
	}
/**查询整表数据(产品	购物车	收藏_表)*/
	public List<ProductShoppingcarStoreUpBean> queryAllProductShoppingcarStoreUp() {
		List<ProductShoppingcarStoreUpBean> productShoppingcarStoreUps= new ArrayList<ProductShoppingcarStoreUpBean>();
		Cursor cursor = resolver.query(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.CONTENT_URI,
				new String[] { Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS,
Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT}, null, null, null);
		if (cursor != null) {
			if (cursor.moveToFirst()) {
				int indexOfProductId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_ID);
				int indexOfProductClass = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_CLASS);
				int indexOfProductName = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_NAME);
				int indexOfProductPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PIC);
				int indexOfProductSmalPic = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_SMAL_PIC);
				int indexOfProductInfo = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INFO);
				int indexOfProductStype = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_STYPE);
				int indexOfProductPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PRICE);
				int indexOfProductDiscount = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_DISCOUNT);
				int indexOfProductPreferentialPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_PREFERENTIAL_PRICE);
				int indexOfPersonBuyPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PERSON_BUY_PRICE);
				int indexOfOnlineRecommendPrice = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.ONLINE_RECOMMEND_PRICE);
				int indexOfProductIntegrate = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PRODUCT_INTEGRATE);
				int indexOfisInShoppingCar = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_IN_SHOPPING_CAR);
				int indexOfisStoreUp = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_STORE_UP);
				int indexOfBuyUnit = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_UNIT);
				int indexOfMaxBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.MAX_BUY_NUMBER);
				int indexOfBuyNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.BUY_NUMBER);
				int indexOfInventoryNumber = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.INVENTORY_NUMBER);
				int indexOfisPromotion = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_PROMOTION);
				int indexOfPromotionId = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.PROMOTION_ID);
				int indexOfStatus = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.STATUS);
				int indexOfisGift = cursor
						.getColumnIndex(Account_Deliver_OrderForm_ProductShoppingcarStoreUp_DBTableDescribe.ProductShoppingcarStoreUpTable.IS_GIFT);
				do {
//产品ID
					String productId = cursor.getString(indexOfProductId);
//产品所属系列
					String productClass = cursor.getString(indexOfProductClass);
//产品名字
					String productName = cursor.getString(indexOfProductName);
//产品图片
					String productPic = cursor.getString(indexOfProductPic);
//产品缩略图
					String productSmalPic = cursor.getString(indexOfProductSmalPic);
//产品简介
					String productInfo = cursor.getString(indexOfProductInfo);
//产品规格
					String productStype = cursor.getString(indexOfProductStype);
//产品原价
					String productPrice = cursor.getString(indexOfProductPrice);
//产品折扣率
					String productDiscount = cursor.getString(indexOfProductDiscount);
//产品优惠价
					String productPreferentialPrice = cursor.getString(indexOfProductPreferentialPrice);
//个人购货价
					String personBuyPrice = cursor.getString(indexOfPersonBuyPrice);
//在线推荐价格
					String onlineRecommendPrice = cursor.getString(indexOfOnlineRecommendPrice);
//产品点数
					String productIntegrate = cursor.getString(indexOfProductIntegrate);
//是否加入购物车
					String isInShoppingCar = cursor.getString(indexOfisInShoppingCar);
//是否收藏
					String isStoreUp = cursor.getString(indexOfisStoreUp);
//购买单位
					String buyUnit = cursor.getString(indexOfBuyUnit);
//允许的最大购买量
					String maxBuyNumber = cursor.getString(indexOfMaxBuyNumber);
//购买数量
					String buyNumber = cursor.getString(indexOfBuyNumber);
//库存数量
					String inventoryNumber = cursor.getString(indexOfInventoryNumber);
//是否促销
					String isPromotion = cursor.getString(indexOfisPromotion);
//促销活动编号
					String promotionId = cursor.getString(indexOfPromotionId);
//产品状态(0下架1上架)
					String status = cursor.getString(indexOfStatus);
//是否为礼品
					String isGift = cursor.getString(indexOfisGift);
					ProductShoppingcarStoreUpBean productShoppingcarStoreUpBean = new ProductShoppingcarStoreUpBean();
//产品ID
productShoppingcarStoreUpBean.setProductId(productId);
//产品所属系列
productShoppingcarStoreUpBean.setProductClass(productClass);
//产品名字
productShoppingcarStoreUpBean.setProductName(productName);
//产品图片
productShoppingcarStoreUpBean.setProductPic(productPic);
//产品缩略图
productShoppingcarStoreUpBean.setProductSmalPic(productSmalPic);
//产品简介
productShoppingcarStoreUpBean.setProductInfo(productInfo);
//产品规格
productShoppingcarStoreUpBean.setProductStype(productStype);
//产品原价
productShoppingcarStoreUpBean.setProductPrice(productPrice);
//产品折扣率
productShoppingcarStoreUpBean.setProductDiscount(productDiscount);
//产品优惠价
productShoppingcarStoreUpBean.setProductPreferentialPrice(productPreferentialPrice);
//个人购货价
productShoppingcarStoreUpBean.setPersonBuyPrice(personBuyPrice);
//在线推荐价格
productShoppingcarStoreUpBean.setOnlineRecommendPrice(onlineRecommendPrice);
//产品点数
productShoppingcarStoreUpBean.setProductIntegrate(productIntegrate);
//是否加入购物车
productShoppingcarStoreUpBean.setisInShoppingCar(isInShoppingCar);
//是否收藏
productShoppingcarStoreUpBean.setisStoreUp(isStoreUp);
//购买单位
productShoppingcarStoreUpBean.setBuyUnit(buyUnit);
//允许的最大购买量
productShoppingcarStoreUpBean.setMaxBuyNumber(maxBuyNumber);
//购买数量
productShoppingcarStoreUpBean.setBuyNumber(buyNumber);
//库存数量
productShoppingcarStoreUpBean.setInventoryNumber(inventoryNumber);
//是否促销
productShoppingcarStoreUpBean.setisPromotion(isPromotion);
//促销活动编号
productShoppingcarStoreUpBean.setPromotionId(promotionId);
//产品状态(0下架1上架)
productShoppingcarStoreUpBean.setStatus(status);
//是否为礼品
productShoppingcarStoreUpBean.setisGift(isGift);
					productShoppingcarStoreUps.add(productShoppingcarStoreUpBean);
				} while (cursor.moveToNext());
			}
			cursor.close();
		}
		return productShoppingcarStoreUps;
	}
	}
